42.577 seconds og before sets
58.051 seconds sets added
50.219 seconds hand turned into a set
45.135 seconds removed some extra bits from actionCheck + exported len calls from fitness into parent function +
40.054 seconds set removal
         74711017 function calls in

         if non else works. significantly more care can be put into determining whether or not more games are needed to zero in on the fitness of a profile


would transitioning color/value attributes into numbers speed up processsing?
    a map can always be used to regenerate the names for display

could color and value attributes be removed? Could cards be identified exclusively by their hash?

modify game class to hold top card from draw pile with maybe a modifier to specifiy the color or maybe have one card stay in place and just modify its values over time

if fitness function becomes time consuming enough: staged fitness calls. rough then more precise


I could memorze validMoves for every possible card combination before hand and just pull them up as necesarry

when removing cards from hand maybe I could keep track of the index as I loop through and delete the index of the chosen card
  this should be faster than using remvoe
